mutate(
total_minutes = as.numeric(total) / 60,
personal_care_minutes = as.numeric(personal_care) / 60,
sleep_minutes = as.numeric(sleep) / 60,
eating_minutes = as.numeric(eating) / 60,
# Add more columns for other activities as needed
)
# Assuming your dataset is named 'df'
# Calculate the total minutes for each row
new_tibble <- df %>%
mutate(
total_minutes = as.numeric(total) / 60,
personal_care_minutes = as.numeric(personal_care) / 60,
sleep_minutes = as.numeric(sleep) / 60,
eating_minutes = as.numeric(eating) / 60,
# Add more columns for other activities as needed
)
# Assuming your dataset is named 'df'
# Calculate the total minutes for each row
new_tibble <- df %>%
mutate(
total_minutes = as.numeric(total) / 60,
personal_care_minutes = as.numeric(personal_care) / 60,
sleep_minutes = as.numeric(sleep) / 60,
eating_minutes = as.numeric(eating) / 60,
# Add more columns for other activities as needed
)
# Assuming your dataset is named 'df'
# Calculate the total minutes for each row
new_tibble <- df %>%
mutate(
total_minutes = as.numeric(total) / 60,
personal_care_minutes = as.numeric(personal_care) / 60,
sleep_minutes = as.numeric(sleep) / 60,
eating_minutes = as.numeric(eating) / 60,
# Add more columns for other activities as needed
)
str(new_tibble)
#load packages
install.packages(tidyverse)
install.packages("hms")
library(tidyverse, dplyr, hms)
#load data
time_use <- read.csv("data/time use.csv")
time_use
#convert to a tibble
tibble_time <- as_tibble(time_use)
#load packages
library(tidyverse, dplyr, hms)
#load packages
library(tidyverse, dplyr, hms)
#load packages
library(tidyverse, dplyr)
#load data
time_use <- read.csv("data/time use.csv")
time_use
#convert to a tibble
tibble_time <- as_tibble(time_use)
view(tibble_time)
# Assuming your dataset is named 'df'
# Calculate the total minutes for each row
new_tibble <- df %>%
mutate(
total_minutes = as.numeric(total) / 60,
personal_care_minutes = as.numeric(personal_care) / 60,
sleep_minutes = as.numeric(sleep) / 60,
eating_minutes = as.numeric(eating) / 60,
# Add more columns for other activities as needed
)
#rename column names
rename_cols <- function(x){
names(x) <- names(x) %>% str_replace_all("\\.","_") %>% tolower()
return(x)
}
new_tibble <- rename_cols(tibble_time)
view(new_tibble)
# Split the time string into hours and minutes
time_parts <- unlist(strsplit(time_str, ":"))
# Add a timestamp column to the dataset
new_tibble <- new_tibble %>%
mutate(Timestamp = Sys.time())
# View the modified dataset
print(new_tibble)
# Add a timestamp column to the dataset
new_tibble <- new_tibble %>%
mutate(Timestamp = Sys.time())
# View the modified dataset
view(new_tibble)
# Add a timestamp column to the dataset
new_tibble1 <- new_tibble %>%
mutate(Timestamp = Sys.time())
# View the modified dataset
view(new_tibble1)
# Define a function to convert HH:MM time format to minutes
convert_time_to_minutes <- function(time_string) {
time_parts <- unlist(strsplit(time_string, ":"))
hours <- as.numeric(time_parts[1])
minutes <- as.numeric(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Mutate a new column "TotalMinutes" with the total number of minutes
new_tibble <- new %>%
mutate(TotalMinutes = sapply(df$`Total`, convert_time_to_minutes))
new_tibble <- new_tibble %>%
mutate(TotalMinutes = as.numeric(sub(":", "", df$`Total`)))
# Function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$Total, convert_time_to_minutes))
# Function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$Total, convert_time_to_minutes))
# Function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$Total, convert_time_to_minutes))
# Function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$Total, convert_time_to_minutes))
# Function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$Total, convert_time_to_minutes))
# Function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total_minutes <- hours * 60 + minutes
return(total_minutes)
}
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$Total, convert_time_to_minutes))
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$Total, convert_time_to_minutes))
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(df$total, convert_time_to_minutes))
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(TotalMinutes = sapply(new_tibble$total, convert_time_to_minutes))
# View the modified dataset
print(new_tibble)
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(total_minutes = sapply(new_tibble$total, convert_time_to_minutes))
# View the modified dataset
print(new_tibble)
# Mutate a new column "TotalMinutes"
new_tibble <- new_tibble %>%
mutate(total_minutes = sapply(new_tibble$total, convert_time_to_minutes))
# View the modified dataset
print(new_tibble)
new_tibble <- new_tibble %>%
select(-TotalMinutes)
# View the modified dataset
print(new_tibble)
new_tibble <- new_tibble %>%
select(-total)
# View the modified dataset
print(new_tibble)
# Split the time string into hours and minutes
time_parts <- unlist(strsplit(time_str, ":"))
#function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
# mutate a new column "total"
new_tibble <- new_tibble %>%
mutate(total_m
# mutate a new column "total"
new_tibble <- new_tibble %>%
mutate(total)
# mutate a new column "total"
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#mutate a new column "total"
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#load packages
library(tidyverse, dplyr)
#load data
time_use <- read.csv("data/time use.csv")
time_use
#convert to a tibble
tibble_time <- as_tibble(time_use)
view(tibble_time)
#check column data types
str(tibble_time)
class(tibble_time)
#rename column names
rename_cols <- function(x){
names(x) <- names(x) %>% str_replace_all("\\.","_") %>% tolower()
return(x)
}
new_tibble <- rename_cols(tibble_time)
view(new_tibble)
#check for missing values
sum(is.na(new_tibble))
#no null values!
#mutating new column #1
time <- new_tibble %>%
mutate(new_tibble, total_personal_care = (personal_care + other_and_or_unspecified_personal_care))
#load data
time_use <- read.csv("data/time use.csv")
time_use
#load packages
library(tidyverse, dplyr)
#load data
time_use <- read.csv("data/time use.csv")
time_use
#convert to a tibble
tibble_time <- as_tibble(time_use)
view(tibble_time)
#check column data types
str(tibble_time)
#rename column names
rename_cols <- function(x){
names(x) <- names(x) %>% str_replace_all("\\.","_") %>% tolower()
return(x)
}
new_tibble <- rename_cols(tibble_time)
view(new_tibble)
#check for missing values
sum(is.na(new_tibble))
#no null values!
#function to convert HH:MM time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#mutate a new column "total"
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
view(new_tibble)
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#mutate all columns
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#mutate all columns
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#mutate all columns
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#mutate all columns
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#mutate column
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#mutate column
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#mutate column
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#mutate column
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#mutate column
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#mutate column
new_tibble <- new_tibble %>%
mutate(total = sapply(new_tibble$total, convert_time_to_minutes))
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert time format to total personl_care minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
personal_care <- hours * 60 + minutes
return(personal_care)
}
#convert time format to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
#convert total column to total minutes
convert_time_to_minutes <- function(time_str) {
time_parts <- unlist(strsplit(time_str, ":"))
hours <- as.integer(time_parts[1])
minutes <- as.integer(time_parts[2])
total <- hours * 60 + minutes
return(total)
}
